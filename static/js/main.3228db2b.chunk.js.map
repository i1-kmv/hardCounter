{"version":3,"sources":["components/SettingBlock/Settings.module.css","components/CounterBlock/Counter.module.css","components/SettingBlock/InputArea.module.css","components/SettingBlock/inputAreas.module.css","components/CounterBlock/Visual.module.css","logo.svg","components/SettingBlock/InputArea.js","components/SettingBlock/InputAreas.js","components/Button.js","components/SettingBlock/Settings.js","components/CounterBlock/Visual.js","components/CounterBlock/Counter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","InputArea","render","className","s","area","props","areaItem","inputClass","onChangeCapture","setValue","onFocus","onFocusActive","type","placeholder","holderValue","value","React","Component","InputAreas","state","placeholderStartValue","placeholderMaxValue","areas","maxValue","setMaxValue","startValue","setStartValue","Button","onClick","name","counterInc","counterReset","setStart","disabled","valueVisual","Settings","settings","wrapper","settingButtons","Visual","Counter","counter","counterButtons","App","inputClassGood","inputClassBad","componentDidMount","restoreState","saveState","stateAsString","JSON","stringify","localStorage","setItem","getItem","parse","setState","newValue","Number","e","newStartValue","currentTarget","newMaxValue","prevProps","prevState","snapshot","this","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3228db2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__2XT_P\",\"wrapper\":\"Settings_wrapper__3i-Cd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__10jrF\",\"wrapper\":\"Counter_wrapper__2DaZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"area\":\"InputArea_area__2X5DT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"areas\":\"inputAreas_areas__1LJNs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visual\":\"Visual_visual__3c286\",\"visualNumber\":\"Visual_visualNumber__2Y-uH\",\"visualNumberMax\":\"Visual_visualNumberMax__2bv8n\",\"visualError\":\"Visual_visualError__1YWfJ\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport s from \"./InputArea.module.css\"\r\n\r\n\r\nclass InputArea extends React.Component {\r\n\r\n\r\n    render = () => {\r\n\r\n\r\n        return (\r\n\r\n\r\n            <div className={s.area}>\r\n                <span>{this.props.areaItem}</span>\r\n                <input className={this.props.inputClass()} onChangeCapture={this.props.setValue}\r\n                       onFocus={this.props.onFocusActive}\r\n                       type=\"number\" placeholder={this.props.holderValue} value={this.props.value}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputArea;\r\n","import React from 'react';\r\nimport InputArea from \"./InputArea\";\r\nimport s from \"./inputAreas.module.css\"\r\nimport Settings from \"./Settings\";\r\n\r\n\r\nclass InputAreas extends React.Component {\r\n\r\n    state = {\r\n        placeholderStartValue: 'enter start value',\r\n        placeholderMaxValue: 'enter max value',\r\n    };\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={s.areas}>\r\n                <InputArea inputClass={this.props.inputClass} holderValue={this.state.placeholderMaxValue}\r\n                           value={this.props.maxValue} maxValue={this.props.maxValue} areaItem={this.props.areaItem[0]}\r\n                           setValue={this.props.setMaxValue} onFocusActive={this.props.onFocusActive}/>\r\n                <InputArea inputClass={this.props.inputClass} holderValue={this.state.placeholderStartValue}\r\n                           value={this.props.startValue} startValue={this.props.startValue}\r\n                           setValue={this.props.setStartValue} areaItem={this.props.areaItem[1]}\r\n                           onFocusActive={this.props.onFocusActive}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputAreas;\r\n","import React from 'react';\r\nimport s from \"./Button.module.css\"\r\n\r\n\r\nclass Button extends React.Component {\r\n\r\n\r\n    render = () => {\r\n        let onAddClick = () => {\r\n            if (this.props.name === 'inc') {\r\n                this.props.counterInc();\r\n            } else if (this.props.name === 'reset') {\r\n                this.props.counterReset();\r\n            } else if (this.props.name === 'set') {\r\n                this.props.setStart();\r\n            }\r\n        };\r\n\r\n        let disableActive = () => {\r\n            if (this.props.valueVisual === \"enter values and press 'set'\" && this.props.name === 'inc') {\r\n                return 'disabled';\r\n            }\r\n            if (this.props.valueVisual === \"enter values and press 'set'\" && this.props.name === 'reset') {\r\n                return 'disabled';\r\n            }\r\n            if (this.props.valueVisual === \"Incorrect value\" && this.props.name === 'reset') {\r\n                return 'disabled';\r\n            }\r\n            if (this.props.valueVisual === \"Incorrect value\" && this.props.name === 'inc') {\r\n                return 'disabled'\r\n            }\r\n            if (this.props.valueVisual === this.props.maxValue && this.props.name === 'inc') {\r\n                return 'disabled'\r\n            }\r\n            if ((this.props.name === 'set' && this.props.valueVisual !== \"enter values and press 'set'\") || (this.props.startValue === '' || this.props.maxValue === '')) {\r\n                return 'disabled'\r\n            }\r\n        };\r\n\r\n\r\n        return (\r\n\r\n            <button onClick={() => {\r\n                onAddClick()\r\n            }} disabled={disableActive()}> {this.props.name} </button>\r\n\r\n        );\r\n    }\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport InputAreas from \"./InputAreas\";\r\nimport Button from \"../Button\";\r\nimport s from \"./Settings.module.css\"\r\n\r\n\r\nclass Settings extends React.Component {\r\n\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div className={s.settings}>\r\n                <InputAreas inputClass={this.props.inputClass} maxValue={this.props.maxValue}\r\n                            startValue={this.props.startValue} setStartValue={this.props.setStartValue}\r\n                            setMaxValue={this.props.setMaxValue} areaItem={this.props.areaItem}\r\n                            onFocusActive={this.props.onFocusActive}/>\r\n                <div className={s.wrapper}>\r\n                    <Button valueVisual={this.props.valueVisual} setStart={this.props.setStart}\r\n                            startValue={this.props.startValue}\r\n                            name={this.props.settingButtons} maxValue={this.props.maxValue}/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport s from \"./Visual.module.css\"\r\n\r\n\r\nclass Visual extends React.Component {\r\n    render = () => {\r\n        let setModule = () => {\r\n            if (this.props.valueVisual ===  \"enter values and press 'set'\" ) {\r\n                return 'visual'\r\n            } if (this.props.valueVisual == this.props.maxValue) {\r\n                return 'visualNumberMax'\r\n            } if (this.props.valueVisual ===  \"Incorrect value\"){\r\n                return 'visualError'\r\n            } else {\r\n                return 'visualNumber'\r\n            }\r\n        };\r\n\r\n\r\n        return (\r\n            <div className={s[setModule()]}>\r\n                <span>{this.props.valueVisual}</span>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Visual;\r\n","import React from 'react';\r\nimport Button from \"../Button\";\r\nimport Visual from \"./Visual\";\r\nimport s from \"./Counter.module.css\"\r\nimport Settings from \"../SettingBlock/Settings\";\r\n\r\n\r\nclass Counter extends React.Component {\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={s.counter}>\r\n                <Visual valueVisual={this.props.valueVisual} maxValue={this.props.maxValue}/>\r\n                <div className={s.wrapper}>\r\n                    <Button valueVisual={this.props.valueVisual} counterInc={this.props.counterInc}\r\n                            name={this.props.counterButtons[0]} maxValue={this.props.maxValue}/>\r\n                    <Button valueVisual={this.props.valueVisual} counterReset={this.props.counterReset}\r\n                            name={this.props.counterButtons[1]}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Settings from \"./components/SettingBlock/Settings\";\nimport Counter from \"./components/CounterBlock/Counter\";\n\n\nclass App extends React.Component {\n\n\n    state = {\n        settingButtons: 'set',\n        counterButtons: ['inc', 'reset'],\n        areaItem: ['max value', 'start value'],\n        valueVisual: \"enter values and press 'set'\",\n        startValue: '',\n        maxValue: '',\n        inputClassGood: 'good',\n        inputClassBad: 'bad'\n    }\n\n\n    componentDidMount = () => {\n        this.restoreState()\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n\n        let maxValue = Number(this.state.maxValue);\n        let startValue = Number(this.state.startValue);\n\n\n        if ((this.state.valueVisual === \"enter values and press 'set'\") || (this.state.valueVisual === \"Incorrect value\")) {\n            if ((this.state.maxValue !== '') && (startValue >= maxValue) && ((prevState.startValue !== this.state.startValue) || (prevState.maxValue !== this.state.maxValue))) {\n                this.setState({\n                    valueVisual: \"Incorrect value\"\n                }, () => {\n                    this.saveState();\n                });\n            } else if ((startValue < 0) && ((prevState.startValue !== this.state.startValue) || (prevState.maxValue !== this.state.maxValue))) {\n                this.setState({\n                    valueVisual: \"Incorrect value\"\n                }, () => {\n                    this.saveState();\n                });\n            } else if ((startValue < maxValue) && ((prevState.startValue !== this.state.startValue) || (prevState.maxValue !== this.state.maxValue))) {\n                this.setState({\n                    valueVisual: \"enter values and press 'set'\"\n                }, () => {\n                    this.saveState();\n                });\n            }\n\n        }\n\n    };\n\n\n    saveState = () => {\n\n        let stateAsString = JSON.stringify(this.state);\n        localStorage.setItem(\"state\", stateAsString);\n    };\n\n    restoreState = () => {\n\n        let stateAsString = localStorage.getItem(\"state\");\n\n        let state = JSON.parse(stateAsString);\n\n        this.setState(state);\n\n    };\n\n\n    counterReset = () => {\n\n        let newValue = this.state.startValue;\n\n        this.setState({\n            valueVisual: newValue\n        })\n    };\n\n\n    counterInc = () => {\n        let newValue = ++this.state.valueVisual;\n        if (Number(this.state.valueVisual) >= Number(this.state.startValue) && Number(this.state.valueVisual) <= Number(this.state.maxValue)) {\n            this.setState({\n                valueVisual: newValue\n            }, () => {\n                this.saveState();\n            });\n        } else {\n            return false;\n        }\n\n    };\n\n    setStart = () => {\n        if ((Number(this.state.startValue) >= 0 && Number(this.state.startValue) < Number(this.state.maxValue)) && (this.state.valueVisual === \"enter values and press 'set'\")) {\n            this.setState({\n                valueVisual: this.state.startValue\n            }, () => {\n                this.saveState();\n            })\n        }\n    };\n\n    setStartValue = (e) => {\n\n        let newStartValue = e.currentTarget.value;\n        this.setState({\n            startValue: newStartValue\n        }, () => {\n            this.saveState();\n        })\n\n    };\n\n\n    setMaxValue = (e) => {\n        let newMaxValue = e.currentTarget.value;\n        this.setState({\n            maxValue: newMaxValue\n        }, () => {\n            this.saveState();\n        })\n    };\n\n\n    onFocusActive = () => {\n\n        if ((Number(this.state.startValue) >= 0) && (Number(this.state.startValue) < Number(this.state.maxValue)) || this.state.startValue === '' || this.state.maxValue === '') {\n            this.setState({\n                valueVisual: \"enter values and press 'set'\"\n            }, () => {\n                this.saveState();\n            })\n        } else {\n            this.setState({\n                valueVisual: \"Incorrect value\"\n            }, () => {\n                this.saveState();\n            })\n        }\n    };\n\n\n    render = () => {\n\n\n        let inputClass = () => {\n            if ((Number(this.state.startValue) >= 0) && (Number(this.state.startValue) < Number(this.state.maxValue)) || this.state.startValue === '' || this.state.maxValue === '') {\n                return this.state.inputClassGood;\n            } else {\n                return this.state.inputClassBad;\n            }\n        };\n\n        return (\n            <div className=\"App\">\n                <Settings setStartValue={this.setStartValue} setMaxValue={this.setMaxValue} setStart={this.setStart}\n                          startValue={this.state.startValue} maxValue={this.state.maxValue}\n                          settingButtons={this.state.settingButtons} areaItem={this.state.areaItem}\n                          onFocusActive={this.onFocusActive}\n                          inputClass={inputClass} valueVisual={this.state.valueVisual}/>\n                <Counter counterInc={this.counterInc} counterReset={this.counterReset}\n                         counterButtons={this.state.counterButtons} valueVisual={this.state.valueVisual}\n                         startValue={this.state.startValue} maxValue={this.state.maxValue}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}